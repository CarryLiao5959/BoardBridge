Traceback (most recent call last):
  File "socket_server.py", line 12, in <module>
    asyncio.run(main())
  File "/usr/lib/python3.8/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "socket_server.py", line 9, in main
    async with websockets.serve(echo, "0.0.0.0", 8765):
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/server.py", line 1109, in __aenter__
    return await self
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/server.py", line 1127, in __await_impl__
    server = await self._create_server()
  File "/usr/lib/python3.8/asyncio/base_events.py", line 1463, in create_server
    raise OSError(err.errno, 'error while attempting '
OSError: [Errno 98] error while attempting to bind on address ('0.0.0.0', 8765): address already in use
connection handler failed
Traceback (most recent call last):
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 959, in transfer_data
    message = await self.read_message()
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 1029, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 1104, in read_data_frame
    frame = await self.read_frame(max_size)
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 1161, in read_frame
    frame = await Frame.read(
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
  File "/usr/lib/python3.8/asyncio/streams.py", line 723, in readexactly
    await self._wait_for_data('readexactly')
  File "/usr/lib/python3.8/asyncio/streams.py", line 517, in _wait_for_data
    await self._waiter
  File "/usr/lib/python3.8/asyncio/selector_events.py", line 848, in _read_ready__data_received
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/server.py", line 240, in handler
    await self.ws_handler(self)
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/server.py", line 1186, in _ws_handler
    return await cast(
  File "./socket_server.py", line 5, in echo
    async for message in websocket:
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 497, in __aiter__
    yield await self.recv()
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/engage/.local/lib/python3.8/site-packages/websockets/legacy/protocol.py", line 935, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent
